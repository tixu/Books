// Code generated by protoc-gen-go. DO NOT EDIT.
// source: books.proto

/*
Package books is a generated protocol buffer package.

It is generated from these files:
	books.proto

It has these top-level messages:
	GetBookRequest
	CreateBookRequest
	DeleteBookRequest
	BookReply
	Book
*/
package books

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetBookRequest struct {
	// Types that are valid to be assigned to Criteria:
	//	*GetBookRequest_Bookid
	//	*GetBookRequest_Isbn
	Criteria isGetBookRequest_Criteria `protobuf_oneof:"Criteria"`
}

func (m *GetBookRequest) Reset()                    { *m = GetBookRequest{} }
func (m *GetBookRequest) String() string            { return proto.CompactTextString(m) }
func (*GetBookRequest) ProtoMessage()               {}
func (*GetBookRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isGetBookRequest_Criteria interface {
	isGetBookRequest_Criteria()
}

type GetBookRequest_Bookid struct {
	Bookid uint64 `protobuf:"varint,1,opt,name=bookid,oneof"`
}
type GetBookRequest_Isbn struct {
	Isbn string `protobuf:"bytes,2,opt,name=isbn,oneof"`
}

func (*GetBookRequest_Bookid) isGetBookRequest_Criteria() {}
func (*GetBookRequest_Isbn) isGetBookRequest_Criteria()   {}

func (m *GetBookRequest) GetCriteria() isGetBookRequest_Criteria {
	if m != nil {
		return m.Criteria
	}
	return nil
}

func (m *GetBookRequest) GetBookid() uint64 {
	if x, ok := m.GetCriteria().(*GetBookRequest_Bookid); ok {
		return x.Bookid
	}
	return 0
}

func (m *GetBookRequest) GetIsbn() string {
	if x, ok := m.GetCriteria().(*GetBookRequest_Isbn); ok {
		return x.Isbn
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetBookRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetBookRequest_OneofMarshaler, _GetBookRequest_OneofUnmarshaler, _GetBookRequest_OneofSizer, []interface{}{
		(*GetBookRequest_Bookid)(nil),
		(*GetBookRequest_Isbn)(nil),
	}
}

func _GetBookRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetBookRequest)
	// Criteria
	switch x := m.Criteria.(type) {
	case *GetBookRequest_Bookid:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Bookid))
	case *GetBookRequest_Isbn:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Isbn)
	case nil:
	default:
		return fmt.Errorf("GetBookRequest.Criteria has unexpected type %T", x)
	}
	return nil
}

func _GetBookRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetBookRequest)
	switch tag {
	case 1: // Criteria.bookid
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Criteria = &GetBookRequest_Bookid{x}
		return true, err
	case 2: // Criteria.isbn
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Criteria = &GetBookRequest_Isbn{x}
		return true, err
	default:
		return false, nil
	}
}

func _GetBookRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetBookRequest)
	// Criteria
	switch x := m.Criteria.(type) {
	case *GetBookRequest_Bookid:
		n += proto.SizeVarint(1<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Bookid))
	case *GetBookRequest_Isbn:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Isbn)))
		n += len(x.Isbn)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CreateBookRequest struct {
	Book *Book `protobuf:"bytes,1,opt,name=book" json:"book,omitempty"`
}

func (m *CreateBookRequest) Reset()                    { *m = CreateBookRequest{} }
func (m *CreateBookRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateBookRequest) ProtoMessage()               {}
func (*CreateBookRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateBookRequest) GetBook() *Book {
	if m != nil {
		return m.Book
	}
	return nil
}

type DeleteBookRequest struct {
	Bookid uint64 `protobuf:"varint,1,opt,name=bookid" json:"bookid,omitempty"`
}

func (m *DeleteBookRequest) Reset()                    { *m = DeleteBookRequest{} }
func (m *DeleteBookRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteBookRequest) ProtoMessage()               {}
func (*DeleteBookRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DeleteBookRequest) GetBookid() uint64 {
	if m != nil {
		return m.Bookid
	}
	return 0
}

type BookReply struct {
	Book []*Book `protobuf:"bytes,1,rep,name=book" json:"book,omitempty"`
}

func (m *BookReply) Reset()                    { *m = BookReply{} }
func (m *BookReply) String() string            { return proto.CompactTextString(m) }
func (*BookReply) ProtoMessage()               {}
func (*BookReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *BookReply) GetBook() []*Book {
	if m != nil {
		return m.Book
	}
	return nil
}

type Book struct {
	Id         uint64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Page       int32  `protobuf:"varint,3,opt,name=page" json:"page,omitempty"`
	Author     string `protobuf:"bytes,4,opt,name=author" json:"author,omitempty"`
	Pubslisher string `protobuf:"bytes,5,opt,name=pubslisher" json:"pubslisher,omitempty"`
	Isbn13     string `protobuf:"bytes,6,opt,name=isbn13" json:"isbn13,omitempty"`
}

func (m *Book) Reset()                    { *m = Book{} }
func (m *Book) String() string            { return proto.CompactTextString(m) }
func (*Book) ProtoMessage()               {}
func (*Book) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Book) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Book) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Book) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *Book) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Book) GetPubslisher() string {
	if m != nil {
		return m.Pubslisher
	}
	return ""
}

func (m *Book) GetIsbn13() string {
	if m != nil {
		return m.Isbn13
	}
	return ""
}

func init() {
	proto.RegisterType((*GetBookRequest)(nil), "GetBookRequest")
	proto.RegisterType((*CreateBookRequest)(nil), "CreateBookRequest")
	proto.RegisterType((*DeleteBookRequest)(nil), "DeleteBookRequest")
	proto.RegisterType((*BookReply)(nil), "BookReply")
	proto.RegisterType((*Book)(nil), "Book")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Books service

type BooksClient interface {
	GetBook(ctx context.Context, in *GetBookRequest, opts ...grpc.CallOption) (*BookReply, error)
	CreateBook(ctx context.Context, in *CreateBookRequest, opts ...grpc.CallOption) (*BookReply, error)
	DeleteBook(ctx context.Context, in *DeleteBookRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type booksClient struct {
	cc *grpc.ClientConn
}

func NewBooksClient(cc *grpc.ClientConn) BooksClient {
	return &booksClient{cc}
}

func (c *booksClient) GetBook(ctx context.Context, in *GetBookRequest, opts ...grpc.CallOption) (*BookReply, error) {
	out := new(BookReply)
	err := grpc.Invoke(ctx, "/Books/GetBook", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *booksClient) CreateBook(ctx context.Context, in *CreateBookRequest, opts ...grpc.CallOption) (*BookReply, error) {
	out := new(BookReply)
	err := grpc.Invoke(ctx, "/Books/CreateBook", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *booksClient) DeleteBook(ctx context.Context, in *DeleteBookRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/Books/DeleteBook", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Books service

type BooksServer interface {
	GetBook(context.Context, *GetBookRequest) (*BookReply, error)
	CreateBook(context.Context, *CreateBookRequest) (*BookReply, error)
	DeleteBook(context.Context, *DeleteBookRequest) (*google_protobuf.Empty, error)
}

func RegisterBooksServer(s *grpc.Server, srv BooksServer) {
	s.RegisterService(&_Books_serviceDesc, srv)
}

func _Books_GetBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BooksServer).GetBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Books/GetBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BooksServer).GetBook(ctx, req.(*GetBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Books_CreateBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BooksServer).CreateBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Books/CreateBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BooksServer).CreateBook(ctx, req.(*CreateBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Books_DeleteBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BooksServer).DeleteBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Books/DeleteBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BooksServer).DeleteBook(ctx, req.(*DeleteBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Books_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Books",
	HandlerType: (*BooksServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBook",
			Handler:    _Books_GetBook_Handler,
		},
		{
			MethodName: "CreateBook",
			Handler:    _Books_CreateBook_Handler,
		},
		{
			MethodName: "DeleteBook",
			Handler:    _Books_DeleteBook_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "books.proto",
}

func init() { proto.RegisterFile("books.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x52, 0xcd, 0x6e, 0xf2, 0x30,
	0x10, 0x4c, 0x20, 0xe1, 0xfb, 0x58, 0x24, 0x2a, 0x56, 0x15, 0x72, 0xa9, 0x54, 0xa1, 0x1c, 0xaa,
	0x48, 0x95, 0x8c, 0x0a, 0xb7, 0x1e, 0xa1, 0x55, 0x39, 0xf4, 0x94, 0x37, 0x48, 0xd4, 0x2d, 0x58,
	0xa4, 0x75, 0x6a, 0x3b, 0x07, 0xde, 0xa2, 0x2f, 0xd0, 0x77, 0xad, 0x6c, 0xf3, 0x17, 0xb8, 0x79,
	0x76, 0x67, 0xc7, 0xb3, 0xa3, 0x85, 0x5e, 0x21, 0xe5, 0x46, 0xf3, 0x4a, 0x49, 0x23, 0x47, 0xb7,
	0x2b, 0x29, 0x57, 0x25, 0x4d, 0x1c, 0x2a, 0xea, 0x8f, 0x09, 0x7d, 0x56, 0x66, 0xeb, 0x9b, 0xc9,
	0x1b, 0xf4, 0x5f, 0xc9, 0xcc, 0xa5, 0xdc, 0x64, 0xf4, 0x5d, 0x93, 0x36, 0xc8, 0xa0, 0x63, 0xa7,
	0xc5, 0x3b, 0x0b, 0xc7, 0x61, 0x1a, 0x2d, 0x83, 0x6c, 0x87, 0xf1, 0x1a, 0x22, 0xa1, 0x8b, 0x2f,
	0xd6, 0x1a, 0x87, 0x69, 0x77, 0x19, 0x64, 0x0e, 0xcd, 0x01, 0xfe, 0x2f, 0x94, 0x30, 0xa4, 0x44,
	0x9e, 0x70, 0x18, 0x2c, 0x14, 0xe5, 0x86, 0x4e, 0x05, 0x6f, 0x20, 0xb2, 0x02, 0x4e, 0xae, 0x37,
	0x8d, 0xb9, 0xeb, 0xb9, 0x52, 0xf2, 0x00, 0x83, 0x67, 0x2a, 0xa9, 0xc9, 0x1f, 0x36, 0x0d, 0xec,
	0xbf, 0x4f, 0xee, 0xa1, 0xeb, 0x69, 0x55, 0xb9, 0x3d, 0x11, 0x6d, 0x9f, 0x8b, 0xfe, 0x84, 0x10,
	0x59, 0x88, 0x7d, 0x68, 0x1d, 0x44, 0x5a, 0xce, 0x7f, 0x6c, 0x84, 0x29, 0xc9, 0x2f, 0x90, 0x79,
	0x80, 0x08, 0x51, 0x95, 0xaf, 0x88, 0xb5, 0xc7, 0x61, 0x1a, 0x67, 0xee, 0x6d, 0x2d, 0xe4, 0xb5,
	0x59, 0x4b, 0xc5, 0x22, 0x47, 0xdd, 0x21, 0xbc, 0x03, 0xa8, 0xea, 0x42, 0x97, 0x42, 0xaf, 0x49,
	0xb1, 0xd8, 0xf5, 0x4e, 0x2a, 0x76, 0xce, 0x66, 0xf2, 0x38, 0x63, 0x1d, 0x3f, 0xe7, 0xd1, 0xf4,
	0x37, 0x84, 0xd8, 0x5a, 0xd2, 0x98, 0xc2, 0xbf, 0x5d, 0xde, 0x78, 0xc5, 0x9b, 0xc9, 0x8f, 0x80,
	0x1f, 0xf6, 0x4b, 0x02, 0xe4, 0x00, 0xc7, 0x2c, 0x11, 0xf9, 0x45, 0xb0, 0x67, 0xfc, 0x27, 0x80,
	0x63, 0x96, 0x88, 0xfc, 0x22, 0xd8, 0xd1, 0x90, 0xfb, 0x4b, 0xe0, 0xfb, 0x4b, 0xe0, 0x2f, 0xf6,
	0x12, 0x92, 0xa0, 0xe8, 0xb8, 0xca, 0xec, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xf7, 0xcf, 0x55, 0x2b,
	0x38, 0x02, 0x00, 0x00,
}
